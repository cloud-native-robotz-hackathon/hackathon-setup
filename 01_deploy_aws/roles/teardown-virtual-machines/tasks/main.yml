---
- name: Gather EC2 facts
  ec2_remote_facts:
    region: "{{ region }}"
    filters:
      "tag:namespace": "{{namespace}}"
  register: ec2_facts

- name: Unsubscribe VMs
  include: unregister-vm.yml public_ip={{ item.public_ip_address }}
  with_items: "{{ ec2_facts.instances }}"
  when: ((deployment_type == 'openshift-enterprise') and (item.state == 'running'))
  ignore_errors: yes

- name: Notify of VMs that could not be unsubscribed
  debug:
    msg: "The VM {{ item.private_dns_name }} could not be unsubscribed because it was stopped."
  with_items: "{{ ec2_facts.instances }}"
  when: ((deployment_type == 'openshift-enterprise') and (item.state == 'stopped'))
  ignore_errors: yes

- name: Disassociate elastic IP
  ec2_eip:
    device_id: "{{item.id}}"
    ip: "{{item.public_ip_address}}"
    region: "{{region}}"
    state: absent
    release_on_disassociation: yes
  with_items: "{{ ec2_facts.instances }}"
  when: ((item is defined) and ((item.tags.Name == 'master-' ~ namespace) or (item.tags.Name == 'infra-' ~ namespace)) and (item.state != 'terminated'))

- name: Terminate EC2 VMs
  ec2:
    state: absent
    region: "{{ region }}"
    instance_ids: "{{ item.id }}"
    wait: yes
  with_items: "{{ ec2_facts.instances }}"
  when: item.state != 'terminated'

# In OCP 3.7 volumes are tagged using the kube cluster tag
# so we can be sure we are deleting volumes belonging to the
# cluster we are tearing down
- name: Retrieve dynamic volumes
  ec2_vol_facts:
    region: "{{region}}"
    filters:
        "{'tag:kubernetes.io/cluster/{{namespace}}':'owned','status':'available'}"
  register: aws_volumes

- debug:
    msg: "{{aws_volumes}}"

- name: Delete dynamic volumes
  ec2_vol:
    region: "{{region}}"
    state: "absent"
    id: "{{item.id}}"
  with_items: "{{aws_volumes.volumes}}"
